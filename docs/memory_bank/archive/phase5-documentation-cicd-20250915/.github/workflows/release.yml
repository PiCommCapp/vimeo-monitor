name: Release

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:
  release:
    types: [published]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.12, 3.13]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"

    - name: Cache uv dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/uv
        key: ${{ runner.os }}-uv-${{ hashFiles('**/uv.lock') }}
        restore-keys: |
          ${{ runner.os }}-uv-

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Run full test suite
      run: |
        uv run pytest tests/ -v --cov=src --cov-report=xml --cov-report=html

    - name: Upload coverage reports
      if: matrix.python-version == '3.12'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: htmlcov/

  build-docs:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Build documentation
      run: |
        uv run mkdocs build

    - name: Deploy documentation to GitHub Pages
      id: deployment
      uses: peaceiris/actions-gh-pages@v4
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./site
        cname: # Add your custom domain here if you have one

  release:
    runs-on: ubuntu-latest
    needs: [test, build-docs]
    if: github.event_name == 'release'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'

    - name: Install uv
      uses: astral-sh/setup-uv@v2
      with:
        version: "latest"

    - name: Install dependencies
      run: |
        uv sync --dev

    - name: Build package
      run: |
        uv build

    - name: Upload release artifacts
      uses: actions/upload-artifact@v4
      with:
        name: vimeo-monitor-${{ github.event.release.tag_name }}
        path: ./dist/
        retention-days: 30
