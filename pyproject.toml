[project]
name = "vimeo-monitor"
version = "0.0.1"
description = "Vimeo HLS Kiosk"
readme = "README.md"
requires-python = ">=3.12.2"
authors = ["Dom Capparelli <dcapparelli@picomms.tv>"]
license = { text = "MIT" }
keywords = ['python']
classifiers = [
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "License :: OSI Approved :: MIT License",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "pycodar>=0.1.7",
    "pyvimeo>=1.1.2",
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "dotenv>=0.9.9",
    "click>=8.1.7",
    "pydantic>=2.5.0",
    "pyyaml>=6.0.0",
    "toml>=0.10.2",
    "watchdog>=3.0.0",
    "psutil>=7.0.0",
    "prometheus-client>=0.20.0",
]

[project.urls]
homepage = "https://pypi.org/project/vimeo-monitor"
documentation = "https://vimeo-monitor.readthedocs.io"
repository = "https://github.com/picommcapp/vimeo-monitor"

[dependency-groups]
dev = [
    "safety>=2.3.0",
    "pytest>=8.4.0",
    "pre-commit>=4.2.0",
    "tox-uv>=1.26.0",
    "basedpyright>=1.29.2",
    "ruff>=0.11.12",
]

[tool.setuptools]
py-modules = ["vimeo_monitor"]

[tool.ruff]
target-version = "py313"
line-length = 120
fix = true

[tool.pyright]
typeCheckingMode = "strict"
venvPath = "."
venv = ".venv"

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
ignore = [
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::SyntaxWarning:nodejs_wheel.*",
]
testpaths = ["tests"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.format]
preview = true

[tool.isort]
profile = "black"
src_paths = "tests"
line_length = 80
include_trailing_comma = true
multi_line_output = 3
