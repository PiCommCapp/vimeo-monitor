[project]
name = "vimeo-monitor"
version = "0.0.2"
description = "A Python application for monitoring Vimeo live streams and displaying them using VLC/FFmpeg"
authors = [
  {name = "Vimeo Monitor Team", email = "admin@example.com"},
]
readme = "README.md"
requires-python = ">=3.12"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Multimedia :: Video",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Software Development :: Vimeo",
  "Topic :: Software Development :: Monitoring",
]
license = {text = "MIT"}

dependencies = [
  "pyvimeo>=1.1.2",
  "python-dotenv>=1.0.0",
  "pytest>=8.4.2",
  "pytest-cov>=7.0.0",
  "fastapi>=0.116.1",
  "uvicorn>=0.35.0",
  "prometheus-client>=0.22.1",
  "speedtest-cli>=2.1.3",
  "requests>=2.32.5",
]

[project.optional-dependencies]
test = [
  "pytest>=7.0.0",
  "pytest-cov>=4.0.0",
]
dev = [
  "pytest>=8.4.2",
  "pytest-cov>=7.0.0",
  "ruff>=0.1.0",
  "black>=23.0.0",
  "isort>=5.12.0",
  "mypy>=1.5.0",
  "mkdocs>=1.5.0",
  "mkdocs-material>=9.0.0",
]
health = [
  "fastapi>=0.104.0",
  "uvicorn[standard]>=0.24.0",
  "psutil>=5.9.0",
  "prometheus-client>=0.19.0",
  "speedtest-cli>=2.1.3",
  "requests>=2.31.0",
]

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools]
py-modules = ["streammonitor"]

[tool.uv]
package = true

# Ruff configuration
[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["vimeo_monitor"]
known_third_party = ["vimeo", "dotenv", "pytest"]

# MyPy configuration
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "vimeo.*",
    "dotenv.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-fail-under=50",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "error_scenarios: marks tests as error scenario tests",
    "documentation: marks tests as documentation tests",
    "health: marks tests as health monitoring tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[dependency-groups]
dev = [
    "black>=25.1.0",
    "isort>=6.0.1",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.20",
    "mypy>=1.18.1",
    "ruff>=0.13.0",
    "types-requests>=2.32.4.20250913",
]
